version: "3.3"

services: 

  nextcloud-aio-mastercontainer:
    image: nextcloud/all-in-one:latest
    init: true
    restart: always
    container_name: nextcloud-aio-mastercontainer # This line is not allowed to be changed as otherwise AIO will not work correctly
    volumes:
      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config # This line is not allowed to be changed as otherwise the built-in backup solution will not work
      - /var/run/docker.sock:/var/run/docker.sock:ro # May be changed on macOS, Windows or docker rootless. See the applicable documentation. If adjusting, don't forget to also set 'WATCHTOWER_DOCKER_SOCKET_PATH'!
    network_mode: bridge # add to the same network as docker run would do
    ports:
      # - 80:80 # Can be removed when running behind a web server or reverse proxy (like Apache, Nginx, Caddy, Cloudflare Tunnel and else). See https://github.com/nextcloud/all-in-one/blob/main/reverse-proxy.md
      - 8081:8080
      # - 8443:8443 # Can be removed when running behind a web server or reverse proxy (like Apache, Nginx, Caddy, Cloudflare Tunnel and else). See https://github.com/nextcloud/all-in-one/blob/main/reverse-proxy.md
    environment: # Is needed when using any of the options below
      # AIO_DISABLE_BACKUP_SECTION: false # Setting this to true allows to hide the backup section in the AIO interface. See https://github.com/nextcloud/all-in-one#how-to-disable-the-backup-section
      - APACHE_PORT=11000 # Is needed when running behind a web server or reverse proxy (like Apache, Nginx, Caddy, Cloudflare Tunnel and else). See https://github.com/nextcloud/all-in-one/blob/main/reverse-proxy.md
      - APACHE_IP_BINDING=0.0.0.0 # Should be set when running behind a web server or reverse proxy (like Apache, Nginx, Caddy, Cloudflare Tunnel and else) that is running on the same host. See https://github.com/nextcloud/all-in-one/blob/main/reverse-proxy.md
      # BORG_RETENTION_POLICY: --keep-within=7d --keep-weekly=4 --keep-monthly=6 # Allows to adjust borgs retention policy. See https://github.com/nextcloud/all-in-one#how-to-adjust-borgs-retention-policy
      # COLLABORA_SECCOMP_DISABLED: false # Setting this to true allows to disable Collabora's Seccomp feature. See https://github.com/nextcloud/all-in-one#how-to-disable-collaboras-seccomp-feature
      - NEXTCLOUD_DATADIR=/mnt/proxshare/data/nextcloud # Allows to set the host directory for Nextcloud's datadir. ⚠️⚠️⚠️ Warning: do not set or adjust this value after the initial Nextcloud installation is done! See https://github.com/nextcloud/all-in-one#how-to-change-the-default-location-of-nextclouds-datadir
      # - NEXTCLOUD_MOUNT=/mnt/ # Allows the Nextcloud container to access the chosen directory on the host. See https://github.com/nextcloud/all-in-one#how-to-allow-the-nextcloud-container-to-access-directories-on-the-host
      # NEXTCLOUD_UPLOAD_LIMIT: 10G # Can be adjusted if you need more. See https://github.com/nextcloud/all-in-one#how-to-adjust-the-upload-limit-for-nextcloud
      # NEXTCLOUD_MAX_TIME: 3600 # Can be adjusted if you need more. See https://github.com/nextcloud/all-in-one#how-to-adjust-the-max-execution-time-for-nextcloud
      # NEXTCLOUD_MEMORY_LIMIT: 512M # Can be adjusted if you need more. See https://github.com/nextcloud/all-in-one#how-to-adjust-the-php-memory-limit-for-nextcloud
      # NEXTCLOUD_TRUSTED_CACERTS_DIR: /path/to/my/cacerts # CA certificates in this directory will be trusted by the OS of the nexcloud container (Useful e.g. for LDAPS) See See https://github.com/nextcloud/all-in-one#how-to-trust-user-defined-certification-authorities-ca
      # NEXTCLOUD_STARTUP_APPS: deck twofactor_totp tasks calendar contacts notes # Allows to modify the Nextcloud apps that are installed on starting AIO the first time. See https://github.com/nextcloud/all-in-one#how-to-change-the-nextcloud-apps-that-are-installed-on-the-first-startup
      # NEXTCLOUD_ADDITIONAL_APKS: imagemagick # This allows to add additional packages to the Nextcloud container permanently. Default is imagemagick but can be overwritten by modifying this value. See https://github.com/nextcloud/all-in-one#how-to-add-os-packages-permanently-to-the-nextcloud-container
      # NEXTCLOUD_ADDITIONAL_PHP_EXTENSIONS: imagick # This allows to add additional php extensions to the Nextcloud container permanently. Default is imagick but can be overwritten by modifying this value. See https://github.com/nextcloud/all-in-one#how-to-add-php-extensions-permanently-to-the-nextcloud-container
      # NEXTCLOUD_ENABLE_DRI_DEVICE: true # This allows to enable the /dev/dri device in the Nextcloud container. ⚠️⚠️⚠️ Warning: this only works if the '/dev/dri' device is present on the host! If it should not exist on your host, don't set this to true as otherwise the Nextcloud container will fail to start! See https://github.com/nextcloud/all-in-one#how-to-enable-hardware-transcoding-for-nextcloud
      # NEXTCLOUD_KEEP_DISABLED_APPS: false # Setting this to true will keep Nextcloud apps that are disabled in the AIO interface and not uninstall them if they should be installed. See https://github.com/nextcloud/all-in-one#how-to-keep-disabled-apps
      # TALK_PORT: 3478 # This allows to adjust the port that the talk container is using. See https://github.com/nextcloud/all-in-one#how-to-adjust-the-talk-port
      # WATCHTOWER_DOCKER_SOCKET_PATH: /var/run/docker.sock # Needs to be specified if the docker socket on the host is not located in the default '/var/run/docker.sock'. Otherwise mastercontainer updates will fail. For macos it needs to be '/var/run/docker.sock'
    # security_opt: ["label:disable"] # Is needed when using SELinux

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/New_York
      - LANG=en_GB
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    # environment:
      # PUID: 3000
      # PGID: 3000
    ports:
      - 3000:3000
    volumes:
      - ~/docker/config/homepage:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations
      - /mnt/proxshare:/mnt/proxshare
      - ~/docker/config/homepage/images/:/app/public/images
    env_file: .env
    restart: unless-stopped

  wg-easy:
    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    volumes:
      - ~/docker/config/wg-easy:/etc/wireguard
    environment:
      - WG_HOST=terrhyland.com
      - PASSWORD=$WG_EASY_PASSWORD
      - PORT=51821
      - WG_PORT=51820
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=3000
      - PGID=3000
      - TZ=America/New_York
    volumes:
      - ~/docker/config/bazaarr:/config
      - /mnt/proxshare/data:/data
      # - /mnt/proxshare/data:/data/media/tv
    ports:
      - 6767:6767
    restart: unless-stopped
    # networks:
    #   - npm_proxy

  mtg-spoiler-bot:
    build:
      context: ./MTG-Spoiler-Bot
      dockerfile: Dockerfile
    container_name: mtg-spoiler-bot
    ports:
      - 3001:3000
    volumes:
      - ~/docker/config/mtg-spoiler-bot/spoiledCards.txt:/usr/src/app/spoiledCards.txt
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      - TZ=America/New_York
      - PUID=3000
      - PGID=3000

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: always
    environment:
      DOMAIN: "https://password.terrhyland.com"
    volumes:
      - ~/docker/config/vaultwarden:/data
    ports:
      - 8008:80
    # networks:
    #   - npm_proxy

  overseerr:
    image: sctx/overseerr:latest
    restart: unless-stopped
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=America/New_York
      - PUID=3000
      - PGID=3000
    ports:
      - 5055:5055
    volumes:
      - ~/docker/config/overseer:/app/config
    # networks:
    #   - npm_proxy

  gluetun:
    image: qmcgaw/gluetun
    restart: unless-stopped
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      #      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
      - 8000:8000/tcp
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ~/docker/config/gluetun:/config
    environment:
      - HTTP_CONTROL_SERVER_ADDRESS=:8000
      - HTTP_CONTROL_SERVER_LOG=on
      - VPN_SERVICE_PROVIDER=private internet access
      - VPN_TYPE=openvpn
      # OpenVPN:
      - OPENVPN_USER=$OPENVPN_USERNAME
      - OPENVPN_PASSWORD=$OPENVPN_PASSWORD
      # Timezone for accurate log times
      - TZ=America/New_York

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: service:gluetun
    environment:
      - PUID=3000
      - PGID=3000
      - TZ=America/New_York
      - WEBUI_PORT=8080
    volumes:
      - ~/docker/config/qbittorrent:/config
      - /mnt/proxshare/data/torrents:/data/torrents
    #    ports:
    #      - 8085:8085
    #      - 6881:6881
    #      - 6881:6881/udp
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=3000
      - PGID=3000
      - TZ=America/New_York
      - UMASK=002
    volumes:
      - ~/docker/config/radarr:/config
      - /mnt/proxshare/data:/data
    ports:
      - 7878:7878
    restart: unless-stopped
    # networks:
    #   - npm_proxy

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=3000
      - PGID=3000
      - TZ=America/New_York
      - UMASK=002
    volumes:
      - ~/docker/config/sonarr:/config
      - /mnt/proxshare/data:/data
    ports:
      - 8989:8989
    restart: unless-stopped
    # networks:
    #   - npm_proxy

  sonarr2:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr2
    environment:
      - PUID=3000
      - PGID=3000
      - TZ=America/New_York
      - UMASK=002
    volumes:
      - ~/docker/config/sonarr2:/config
      - /mnt/proxshare/data:/data
    ports:
      - 8988:8989
    # networks:
    #   - npm_proxy
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    security_opt:
      - no-new-privileges:true
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ~/docker/config/portainer:/data
    environment:
      - TZ=America/New_York
    ports:
      - 9000:9000
    # networks:
    #   - npm_proxy

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=3000
      - PGID=3000
      - TZ=America/New_York
      - UMASK=002
    volumes:
      - ~/docker/config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    # networks:
    #   - npm_proxy

  wyze-bridge:
    container_name: wyze-bridge
    restart: unless-stopped
    image: mrlt8/wyze-bridge:latest
    ports:
      - 1935:1935 # RMTP
      - 8554:8554 # RSTP
      - 8888:8888 # HLS
      - 5001:5000 # Web-UI
    environment:
      - WYZE_EMAIL=$WYZE_EMAIL
      - WYZE_PASSWORD=$WYZE_PASSWORD
      - ENABLE_AUDIO=True
      - API_ID=4e4a9de7-ebe4-4d24-8236-e7f1038db57c
      - API_KEY=$WYZE_API_KEY
    # networks:
    #   - npm_proxy

  # spotify-poppin:
  # container_name: spotify-poppin
  # restart: unless-stopped
  # image: terrhy999/spotify-poppin:latest
  # networks:
  # - npm_proxy
  # ports:
  # - 8889:8889

volumes: # If you want to store the data on a different drive, see https://github.com/nextcloud/all-in-one#how-to-store-the-filesinstallation-on-a-separate-drive
  nextcloud_aio_mastercontainer:
    name: nextcloud_aio_mastercontainer # This line is not allowed to be changed as otherwise the built-in backup solution will not work